# Integration Test Configuration
# Enable in-memory database for integration tests
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;INIT=CREATE SCHEMA IF NOT EXISTS PULSEIQ
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.datasource.driver-class-name=org.h2.Driver

# JPA Configuration for H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# H2 specific settings to handle LOB data types
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Override PostgreSQL-specific properties for H2 compatibility
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false
spring.jpa.properties.hibernate.jdbc.use_streams_for_binary=false
spring.jpa.properties.hibernate.default_schema=

# Disable PostgreSQL-specific batch settings for H2
spring.jpa.properties.hibernate.jdbc.batch_size=0
spring.jpa.properties.hibernate.jdbc.fetch_size=0
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=false
spring.jpa.properties.hibernate.order_inserts=false
spring.jpa.properties.hibernate.order_updates=false

# Use default UUID handling for H2 (remove conflicting property)
# H2 will use its default UUID handling

# Use H2-compatible UUID handling (override PostgreSQL CHAR setting)
spring.jpa.properties.hibernate.type.preferred_uuid_jdbc_type=OTHER

# JWT Configuration for Testing
jwt.secret=mySecretKeyForTestingPurposesShouldBeAtLeast256Bits
jwt.expiration=86400000

# Disable Firebase for tests
firebase.enabled=false

# Disable AdminSeeder for tests
admin-seeder.enabled=false

# Logging Configuration
logging.level.com.pulseiq=DEBUG
logging.level.org.springframework.security=DEBUG
