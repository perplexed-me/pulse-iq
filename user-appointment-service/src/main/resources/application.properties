# # Hibernate naming strategy
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# # Remote (Neon) PostgreSQL (commented out)
# # spring.datasource.url=jdbc:postgresql://ep-fancy-pine-a944h189-pooler.gwc.azure.neon.tech:5432/pulseiq_user?sslmode=require
# # spring.datasource.username=***
# # spring.datasource.password=***

# # Local PostgreSQL
# spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
# spring.datasource.username=postgres
# spring.datasource.password=12345678

# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.properties.hibernate.default_schema=pulseiq

# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.show_sql=true
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# logging.level.org.hibernate.type.descriptor.sql=trace

# # Server configuration
# server.port=8085
# server.address=0.0.0.0

# # HikariCP settings
# spring.datasource.hikari.minimum-idle=2
# spring.datasource.hikari.maximum-pool-size=10
# spring.datasource.hikari.idle-timeout=300000
# spring.datasource.hikari.max-lifetime=1800000
# spring.datasource.hikari.connection-timeout=30000
# spring.datasource.hikari.initialization-fail-timeout=0

# # Disable auto-commit for LOB operations
# spring.datasource.hikari.auto-commit=false

# # Quote all identifiers globally
# spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# # JWT configuration (keep secret values hidden)
# jwt.secret="Hello PulseIQghhhhhhhhhhhhhhhhhhhhhhhhhhhhhh"
# jwt.expiration=86400000

# # CORS configuration
# app.cors.allowed-origins=http://localhost:8080
# app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# spring.web.cors.allowed-origins=http://localhost:8080
# spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# spring.web.cors.allow-credentials=true
# spring.web.cors.allowed-headers=*
# spring.web.cors.exposed-headers=Content-Disposition

# # PostgreSQL specific configurations
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# # Disable auto-commit for LOB operations
# spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# # Configure BLOB handling
# spring.jpa.properties.hibernate.jdbc.use_streams_for_binary=true
# spring.jpa.properties.hibernate.jdbc.use_get_generated_keys=true

# # Additional LOB handling configurations
# spring.jpa.properties.hibernate.jdbc.batch_size=25
# spring.jpa.properties.hibernate.jdbc.fetch_size=25
# spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
# spring.jpa.properties.hibernate.order_inserts=true
# spring.jpa.properties.hibernate.order_updates=true

# # Hibernate type handling
# spring.jpa.properties.hibernate.type.preferred_uuid_jdbc_type=CHAR

# # File upload settings
# spring.servlet.multipart.enabled=true
# spring.servlet.multipart.max-file-size=10MB
# spring.servlet.multipart.max-request-size=10MB
# spring.servlet.multipart.file-size-threshold=2MB
# spring.servlet.multipart.location=${java.io.tmpdir}

# ===============================
# DATABASE CONFIGURATION
# ===============================
# Uses environment variables from .env file
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/pulseiq_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:pulseiq_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:cse408}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.default_schema=pulseiq

# Use standard physical naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# ===============================
# JPA & HIBERNATE CONFIGURATION
# ===============================
# Use 'validate' or 'none' in production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Additional PostgreSQL-specific configurations
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# BLOB/LOB handling
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.jdbc.use_streams_for_binary=true
spring.jpa.properties.hibernate.jdbc.use_get_generated_keys=true

# Batch processing (optional for performance tuning)
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.jdbc.fetch_size=25
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# UUID handling
spring.jpa.properties.hibernate.type.preferred_uuid_jdbc_type=CHAR

# Quote all identifiers (prevent case issues) - DISABLED TO FIX DDL ISSUE
# spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# ===============================
# CONNECTION POOLING (HikariCP)
# ===============================
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.initialization-fail-timeout=0
spring.datasource.hikari.auto-commit=false

# ===============================
# SERVER CONFIGURATION
# ===============================
server.port=${SERVER_PORT:8085}
server.address=${SERVER_ADDRESS:0.0.0.0}

# ===============================
# JWT CONFIGURATION
# ===============================
# Uses environment variables from .env file
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400000}

# ===============================
# FIREBASE (Optional)
# ===============================
firebase.enabled=${FIREBASE_ENABLED:false}

# ===============================
# FILE UPLOAD SETTINGS
# ===============================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2MB
spring.servlet.multipart.location=${java.io.tmpdir}

# ===============================
# CORS CONFIGURATION (Local Development)
# ===============================
# For production use environment variables: ${ALLOWED_ORIGINS:http://localhost:8080}
app.cors.allowed-origins=http://localhost:8080,http://localhost:5173
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-origins=http://localhost:8080,http://localhost:5173
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allow-credentials=true
spring.web.cors.allowed-headers=*
spring.web.cors.exposed-headers=Content-Disposition

# ===============================
# ACTUATOR FOR HEALTH CHECKS
# ===============================
spring.management.endpoints.web.exposure.include=health,info
spring.management.endpoint.health.show-details=when-authorized

# ===============================
# APPLICATION INFO
# ===============================
info.app.name=PulseIQ Backend
info.app.version=@project.version@
